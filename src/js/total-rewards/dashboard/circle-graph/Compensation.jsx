import { useState } from 'react';

import sections from '../../constants/graphSections';

const compFill = {
  unSelected: '#EDF0F3',
  selected: '#0E497B',
};

/**
 * @param {Object} props - The props for this component
 * @param {string} props.currentSection - The active graph section state
 * @param {function} props.setSection - The function to excute on click - updates section type
 * @param {function} props.setSlideNum - The function to excute on click - updates slide number
 * @returns {JSX.Element} SVG section of graph for Compensation category
 */
const Compensation = ({ currentSection, setSection, setSlideNum }) => {
  const [isHover, setIsHover] = useState(false);
  const isComp = currentSection === sections.comp;
  const fill = isComp ? compFill.selected : compFill.unSelected;

  /*Triggers state setters*/
  const handleClick = () => {
    setSection(sections.comp);
    setSlideNum(0);
  }

  return (
    <g className="section" name="comp">
      <g name="comp-section">
        <mask id="comp-mask" fill="white">
          <path d="M460.882 68.7876C419.215 52.1923 374.377 45.0778 329.62 47.96C284.862 50.8422 241.307 63.6488 202.112 85.4513C162.918 107.254 129.067 137.505 103.014 174.013C76.9606 210.52 59.3585 252.368 51.4838 296.521C43.6092 340.675 45.6594 386.028 57.4859 429.291C69.3123 472.554 90.6185 512.642 119.859 546.65C149.1 580.658 185.543 607.732 226.545 625.909C267.546 644.086 312.08 652.91 356.915 651.742L354.947 576.204C321.321 577.08 287.921 570.462 257.169 556.829C226.418 543.196 199.086 522.891 177.155 497.385C155.225 471.879 139.245 441.813 130.375 409.366C121.505 376.918 119.968 342.904 125.874 309.789C131.78 276.673 144.981 245.288 164.521 217.907C184.061 190.527 209.449 167.838 238.845 151.486C268.241 135.134 300.907 125.529 334.476 123.367C368.044 121.206 401.672 126.542 432.923 138.988L460.882 68.7876Z" />
        </mask>
        <path
          d="M460.882 68.7876C419.215 52.1923 374.377 45.0778 329.62 47.96C284.862 50.8422 241.307 63.6488 202.112 85.4513C162.918 107.254 129.067 137.505 103.014 174.013C76.9606 210.52 59.3585 252.368 51.4838 296.521C43.6092 340.675 45.6594 386.028 57.4859 429.291C69.3123 472.554 90.6185 512.642 119.859 546.65C149.1 580.658 185.543 607.732 226.545 625.909C267.546 644.086 312.08 652.91 356.915 651.742L354.947 576.204C321.321 577.08 287.921 570.462 257.169 556.829C226.418 543.196 199.086 522.891 177.155 497.385C155.225 471.879 139.245 441.813 130.375 409.366C121.505 376.918 119.968 342.904 125.874 309.789C131.78 276.673 144.981 245.288 164.521 217.907C184.061 190.527 209.449 167.838 238.845 151.486C268.241 135.134 300.907 125.529 334.476 123.367C368.044 121.206 401.672 126.542 432.923 138.988L460.882 68.7876Z"
          fill={fill}
          stroke="white"
          strokeWidth={`${isComp ? '0' : '8'}`}
          mask="url(#comp-mask)"
        />
      </g>

      <symbol id="comp-icon">
        <ellipse opacity="0.15" cx="103" cy="183" rx="40" ry="40" fill="#0E497B" />
        <ellipse opacity="0.05" cx="103" cy="183" rx="40" ry="40" fill="#0E497B" />
        <path
          d="M141 183C141 203.987 123.987 221 103 221C82.0132 221 65 203.987 65 183C65 162.013 82.0132 145 103 145C123.987 145 141 162.013 141 183Z"
          fill="#0E497B"
          stroke="white"
          strokeWidth={isHover ? '1' : '4'}
        />
        <mask id="comp-icon-mask" style={{ maskType: 'alpha' }} maskUnits="userSpaceOnUse" x="86" y="162" width="35" height="43">
          <path
            d="M103.336 204.6C111.314 204.6 120.472 203.321 120.472 193.36C120.472 186.752 116.098 177.656 109.009 174.28L112.309 164.231L111.417 163.81C108.861 162.727 106.111 162.179 103.336 162.201C100.54 162.18 97.7688 162.725 95.1889 163.803L94.2896 164.209L97.5989 174.311C90.5517 177.708 86.2002 186.786 86.2002 193.36C86.2002 203.321 95.3495 204.6 103.336 204.6ZM97.0477 165.474C99.0738 164.789 101.198 164.437 103.336 164.432C105.454 164.432 107.558 164.781 109.562 165.465L106.929 173.459C106.445 173.331 105.954 173.232 105.458 173.162C105.273 173.131 105.086 173.115 104.896 173.095L104.153 173.028C103.881 172.996 103.608 172.978 103.334 172.974C103.094 172.978 102.854 172.994 102.615 173.021L102.337 173.048C102.133 173.061 101.937 173.075 101.738 173.095L101.58 173.111C101.491 173.111 101.399 173.131 101.321 173.144C100.763 173.215 100.209 173.319 99.6631 173.456L97.0477 165.474ZM101.723 175.333L101.924 175.313C102.069 175.291 102.218 175.284 102.37 175.275L102.593 175.26C102.816 175.26 103.039 175.239 103.345 175.239C103.651 175.239 103.894 175.239 104.14 175.264L104.387 175.284C104.61 175.302 104.834 175.324 105.023 175.349C105.951 175.505 106.855 175.78 107.712 176.168L108.295 176.442C114.264 179.493 118.247 187.571 118.247 193.36C118.247 199.675 113.784 202.368 103.343 202.368C92.9015 202.368 88.4317 199.675 88.4317 193.36C88.4317 183.623 96.3136 176.186 101.723 175.333ZM99.44 192.309L99.2012 192.074L97.6391 193.668L97.8779 193.902C99.0928 195.077 100.662 195.819 102.341 196.013V197.771H104.573V196.026C105.731 195.913 106.819 195.419 107.665 194.62C108.355 193.905 108.714 192.935 108.658 191.943C108.549 189.151 106.088 188.372 104.573 187.986V184.467C105.411 184.62 106.194 184.993 106.842 185.547L107.065 185.77L108.739 184.293L108.516 184.043C107.447 183.003 106.069 182.338 104.59 182.148V180.33H102.359V182.144C101.239 182.213 100.179 182.674 99.3663 183.447C98.6981 184.147 98.3499 185.092 98.4045 186.058C98.5183 188.336 100.413 189.205 102.332 189.727V193.775C101.24 193.597 100.229 193.084 99.44 192.309ZM104.573 190.323C106.11 190.816 106.398 191.266 106.429 192.03C106.463 192.417 106.327 192.8 106.057 193.078C105.641 193.452 105.125 193.695 104.573 193.779V190.323ZM100.645 185.944C100.621 185.59 100.748 185.242 100.993 184.985C101.365 184.647 101.833 184.434 102.332 184.373V187.395C100.826 186.886 100.667 186.402 100.645 185.944Z"
            fill="white"
          />
        </mask>
        <g mask="url(#comp-icon-mask)">
          <path
            d="M103.336 204.6C111.314 204.6 120.472 203.321 120.472 193.36C120.472 186.752 116.098 177.656 109.009 174.28L112.309 164.231L111.417 163.81C108.861 162.727 106.111 162.179 103.336 162.201C100.54 162.18 97.7688 162.725 95.1889 163.803L94.2896 164.209L97.5989 174.311C90.5517 177.708 86.2002 186.786 86.2002 193.36C86.2002 203.321 95.3495 204.6 103.336 204.6ZM97.0477 165.474C99.0738 164.789 101.198 164.437 103.336 164.432C105.454 164.432 107.558 164.781 109.562 165.465L106.929 173.459C106.445 173.331 105.954 173.232 105.458 173.162C105.273 173.131 105.086 173.115 104.896 173.095L104.153 173.028C103.881 172.996 103.608 172.978 103.334 172.974C103.094 172.978 102.854 172.994 102.615 173.021L102.337 173.048C102.133 173.061 101.937 173.075 101.738 173.095L101.58 173.111C101.491 173.111 101.399 173.131 101.321 173.144C100.763 173.215 100.209 173.319 99.6631 173.456L97.0477 165.474ZM101.723 175.333L101.924 175.313C102.069 175.291 102.218 175.284 102.37 175.275L102.593 175.26C102.816 175.26 103.039 175.239 103.345 175.239C103.651 175.239 103.894 175.239 104.14 175.264L104.387 175.284C104.61 175.302 104.834 175.324 105.023 175.349C105.951 175.505 106.855 175.78 107.712 176.168L108.295 176.442C114.264 179.493 118.247 187.571 118.247 193.36C118.247 199.675 113.784 202.368 103.343 202.368C92.9015 202.368 88.4317 199.675 88.4317 193.36C88.4317 183.623 96.3136 176.186 101.723 175.333ZM99.44 192.309L99.2012 192.074L97.6391 193.668L97.8779 193.902C99.0928 195.077 100.662 195.819 102.341 196.013V197.771H104.573V196.026C105.731 195.913 106.819 195.419 107.665 194.62C108.355 193.905 108.714 192.935 108.658 191.943C108.549 189.151 106.088 188.372 104.573 187.986V184.467C105.411 184.62 106.194 184.993 106.842 185.547L107.065 185.77L108.739 184.293L108.516 184.043C107.447 183.003 106.069 182.338 104.59 182.148V180.33H102.359V182.144C101.239 182.213 100.179 182.674 99.3663 183.447C98.6981 184.147 98.3499 185.092 98.4045 186.058C98.5183 188.336 100.413 189.205 102.332 189.727V193.775C101.24 193.597 100.229 193.084 99.44 192.309ZM104.573 190.323C106.11 190.816 106.398 191.266 106.429 192.03C106.463 192.417 106.327 192.8 106.057 193.078C105.641 193.452 105.125 193.695 104.573 193.779V190.323ZM100.645 185.944C100.621 185.59 100.748 185.242 100.993 184.985C101.365 184.647 101.833 184.434 102.332 184.373V187.395C100.826 186.886 100.667 186.402 100.645 185.944Z"
            fill="white"
          />
          <path d="M130.829 157.739H77.272V211.296H130.829V157.739Z" fill="white" />
          <path d="M130.829 157.738H77.2715V211.295H130.829V157.738Z" fill="white" />
        </g>
      </symbol>

      <ellipse
        className={`${isComp && 'iconSelected iconAnimate'} iconButton`}
        name="iconAnimate"
        cx="103"
        cy="183"
        rx="40"
        ry="40"
      />

      <use
        className={`${isComp && 'iconSelected'} iconButton`}
        href="#comp-icon"
        onClick={() => handleClick()}
        onMouseOver={() => setIsHover(true)}
        onMouseOut={() => setIsHover(false)}
      />

      {!isComp &&
        <foreignObject
          className={`${isHover && 'show'} iconButton toolTip`}
          x="13"
          y="86"
          width="180"
          height="45"
          onClick={() => handleClick()}
          onMouseOver={() => setIsHover(true)}
          onMouseOut={() => setIsHover(false)}
        >
          <div className="toolTipBody">My Compensation</div>
        </foreignObject>
      }
    </g>
  );
}

export default Compensation;